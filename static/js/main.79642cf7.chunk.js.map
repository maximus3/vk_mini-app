{"version":3,"sources":["views/MainUS.js","views/Main.js","views/Admin.js","App.js","index.js"],"names":["osName","platform","MainUS","id","popout","view_go","fetchedUser","useState","activePanel","setActivePanel","go","e","currentTarget","dataset","to","title","size","level","onClick","data-to","left","IOS","Main","addRec","poolRecords","records","useEffect","console","log","length","secs","sec","push","before","photo_200","src","description","city","first_name","last_name","map","time","indexOf","expandable","data-sec","Admin","el","t","Date","getTime","count","App","activeView","setActiveView","setUser","setPopout","setRecords","a","connect","send","user","fetchData","sort","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79642cf7.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport { View, Panel, PanelHeader, Group, Div, Button, HeaderButton, Cell } from '@vkontakte/vkui';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nconst osName = platform();\r\n\r\nconst MainUS = ({ id, popout, view_go, fetchedUser }) => {\r\n    const [activePanel, setActivePanel] = useState('main');\r\n    \r\n    const go = e => {\r\n        setActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n    return (\r\n    <View id={id} activePanel={activePanel} popout={popout}>\r\n    \r\n\t  <Panel id=\"main\">\r\n\t\t<PanelHeader>Бассейн</PanelHeader>\r\n\t\t<Group title=\"Вход\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={view_go} data-to=\"main\">\r\n\t\t\t\t\tРегистрация\r\n\t\t\t\t</Button>\r\n                <Button size=\"xl\" level=\"2\" onClick={view_go} data-to=\"admin\">\r\n\t\t\t\t\tАдмин-панель\r\n\t\t\t\t</Button>\r\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"info\">\r\n\t\t\t\t\tИнформация\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t  </Panel>\r\n      \r\n      <Panel id=\"info\">\r\n\t\t<PanelHeader\r\n\t\t\tleft={<HeaderButton onClick={go} data-to=\"main\">\r\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n\t\t\t</HeaderButton>}\r\n\t\t>\r\n            Информация\r\n        </PanelHeader>\r\n        <Cell>\r\n            Данное приложение предназначено для записи в бассейн.\r\n\t\t</Cell>\r\n      </Panel>\r\n      \r\n    </View>\r\n    );\r\n}\r\n\r\nexport default MainUS;","import React, { useState, useEffect } from 'react';\r\nimport { View, Panel, PanelHeader, Group, Cell, Avatar, Div, Button, List } from '@vkontakte/vkui';\r\n\r\nconst Main = ({ id, popout, view_go, fetchedUser, addRec, poolRecords, records }) => {\r\n    const [activePanel, setActivePanel] = useState('main');\r\n    \r\n    useEffect(() => {\r\n      console.log(records.length);\r\n    }, [records.length]);\r\n    \r\n    const go = e => {\r\n        setActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n    \r\n    let secs = []\r\n    for (let sec in poolRecords) {\r\n        secs.push(sec);  \r\n    }\r\n\r\n    return (\r\n    <View id={id} activePanel={activePanel} popout={popout}>\r\n\t  <Panel id=\"main\">\r\n\t\t<PanelHeader>Бассейн</PanelHeader>\r\n\t\t{fetchedUser &&\r\n\t\t<Group title=\"Добро пожаловать!\">\r\n\t\t\t<Cell\r\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\r\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\r\n\t\t\t>\r\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n\t\t\t</Cell>\r\n\t\t</Group>}\r\n        \r\n        {records.length > 0 &&\r\n        <Group title=\"Ваши ближайшие записи\">\r\n          <List>\r\n            {records.map((sec) => (\r\n              <Cell>\r\n                {`${poolRecords[sec].time}`}\r\n              </Cell>\r\n            ))}\r\n          </List>\r\n        </Group>\r\n        }\r\n        \r\n        {secs.length > 0 &&\r\n        <Group title=\"Открытые записи\">\r\n          <List>\r\n            {secs.map((sec) => {\r\n              if (records.indexOf(sec) == -1)\r\n              return(\r\n              <Cell expandable onClick={addRec} data-sec={sec}>\r\n                {`${poolRecords[sec].time}`}\r\n              </Cell>);\r\n            })}\r\n          </List>\r\n        </Group>\r\n        }\r\n\r\n\t\t<Group title=\"Действия\">\r\n          <Div>\r\n            <Button size=\"xl\" level=\"2\" onClick={view_go} data-to=\"mainUS\">\r\n              Выход\r\n            </Button>\r\n          </Div>\r\n\t\t</Group>\r\n\t  </Panel>\r\n    </View>\r\n    );\r\n}\r\n\r\nexport default Main;","import React, { useState } from 'react';\r\nimport { View, Panel, PanelHeader, Group, Cell, Avatar, Div, Button } from '@vkontakte/vkui';\r\n\r\nconst Admin = ({ id, popout, view_go, fetchedUser }) => {\r\n    const [activePanel, setActivePanel] = useState('main');\r\n    \r\n    const go = e => {\r\n        setActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n    return (\r\n    <View id={id} activePanel={activePanel} popout={popout}>\r\n    \r\n\t  <Panel id=\"main\">\r\n\t\t<PanelHeader>Админ-панель</PanelHeader>\r\n\t\t<Group title=\"Действия\">\r\n\t\t\t<Div>\r\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"main\">\r\n\t\t\t\t\tПросмотр сеансов\r\n\t\t\t\t</Button>\r\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"main\">\r\n\t\t\t\t\tДобавить сеанс\r\n\t\t\t\t</Button>\r\n                <Button size=\"xl\" level=\"2\" onClick={go} data-to=\"main\">\r\n\t\t\t\t\tУдалить сеанс\r\n\t\t\t\t</Button>\r\n                <Button size=\"xl\" level=\"2\" onClick={view_go} data-to=\"mainUS\">\r\n\t\t\t\t\tВыход\r\n\t\t\t\t</Button>\r\n\t\t\t</Div>\r\n\t\t</Group>\r\n\t  </Panel>\r\n      \r\n    </View>\r\n    );\r\n}\r\n\r\nexport default Admin;","import React, { useState, useEffect } from 'react';\nimport connect from '@vkontakte/vk-connect';\nimport { Root, ScreenSpinner } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport ReactDOM from 'react-dom';\n\nimport MainUS from './views/MainUS';\nimport Main from './views/Main';\nimport Admin from './views/Admin';\n\nlet poolRecords = {};\n\n;(function () {\n  //const fs = require('fs');\n  //const data = fs.readFileSync(\"./backup/data.m3backup\");\n  //console.log(data);\n  \n  let base_data = [\n      [2020, 2, 25, 15, 0, 24],\n      [2020, 2, 25, 19, 0, 2],\n      [2020, 2, 29, 15, 0, 13],\n      [2020, 2, 29, 19, 0, 4],\n      [2020, 3, 1, 15, 0, 4],\n      [2020, 3, 2, 19, 0, 2],\n      [2020, 3, 3, 15, 0, 3],\n      [2020, 3, 4, 19, 0, 1],\n      [2020, 3, 5, 15, 0, 2],\n      [2020, 3, 6, 15, 0, 1],\n      [2020, 3, 6, 19, 0, 1]\n  ];\n    \n  const make_date = el => {\n      let t = new Date(el[0], el[1] - 1, el[2], el[3], el[4]);\n      poolRecords[t.getTime()] = {time: t, count: el[5]};\n      };\n  base_data.map(make_date);\n})()\n\nconst App = () => {\n    const [activeView, setActiveView] = useState('mainUS');\n    const [fetchedUser, setUser] = useState(null);\n    const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\n    const [records, setRecords] = useState([]);\n    \n    //const fetchedUser = {id: 154785330, first_name: \"Максим\", last_name: \"Иванов\" };\n    \n    useEffect(() => {\n      async function fetchData() {\n\t    const user = await connect.send('VKWebAppGetUserInfo');\n\t\tsetUser(user);\n\t\tsetPopout(null);\n        console.log('fetchData completed');\n\t  }\n      fetchData();\n    }, [/*count*/]); //Запускается только если изменилось значение переменной count*/\n    \n    const go = e => {\n        setActiveView(e.currentTarget.dataset.to);\n\t};\n    \n    const addRec = e => {\n        let sec = e.currentTarget.dataset.sec\n        setPopout(<ScreenSpinner size='large' />);\n        poolRecords[sec].count -= 1;\n        setRecords(records.push(sec));\n        setRecords(records.sort());\n        console.log(records);\n        ReactDOM.render(<App />, document.getElementById('root'));\n        setPopout(null);\n    };\n    \n    return (\n      <Root activeView={activeView}>\n        <MainUS id=\"mainUS\" popout={popout} view_go={go} fetchedUser={fetchedUser}/>\n        <Main id=\"main\" popout={popout} view_go={go} fetchedUser={fetchedUser} addRec={addRec} poolRecords={poolRecords} records={records}/>\n        <Admin id=\"admin\" popout={popout} view_go={go} fetchedUser={fetchedUser}/>\n      </Root>\n    );\n}\n\nexport default App;\n\n","import 'core-js/features/map';\nimport 'core-js/features/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vk-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK  Mini App\nconnect.send('VKWebAppInit');\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}